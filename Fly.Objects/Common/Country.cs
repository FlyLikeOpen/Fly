using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Fly.Objects.Common
{
    public sealed class Country
    {
        private static List<Country> s_CountryList = new List<Country>
        {
            #region Country List

            new Country("阿富汗", "AF", 101),
            new Country("巴林", "BH", 102),
            new Country("孟加拉国", "BD", 103),
            new Country("不丹", "BT", 104),
            new Country("文莱", "BN", 105),
            new Country("缅甸", "MM", 106),
            new Country("柬埔寨", "KH", 107),
            new Country("塞浦路斯", "CY", 108),
            new Country("朝鲜", "KP", 109),
            new Country("中国香港", "HK", 110),
            new Country("印度", "IN", 111),
            new Country("印度尼西亚", "ID", 112),
            new Country("伊朗", "IR", 113),
            new Country("伊拉克", "IQ", 114),
            new Country("以色列", "IL", 115),
            new Country("日本", "JP", 116),
            new Country("约旦", "JO", 117),
            new Country("科威特", "KW", 118),
            new Country("老挝", "LA", 119),
            new Country("黎巴嫩", "LB", 120),
            new Country("中国澳门", "MO", 121),
            new Country("马来西亚", "MY", 122),
            new Country("马尔代夫", "MV", 123),
            new Country("蒙古", "MN", 124),
            new Country("尼泊尔", "NP", 125),
            new Country("阿曼", "OM", 126),
            new Country("巴基斯坦", "PK", 127),
            new Country("巴勒斯坦", "PS", 128),
            new Country("菲律宾", "PH", 129),
            new Country("卡塔尔", "QA", 130),
            new Country("沙特阿拉伯", "SA", 131),
            new Country("新加坡", "SG", 132),
            new Country("韩国", "KR", 133),
            new Country("斯里兰卡", "LK", 134),
            new Country("叙利亚", "SY", 135),
            new Country("泰国", "TH", 136),
            new Country("土耳其", "TR", 137),
            new Country("阿联酋", "AE", 138),
            new Country("也门共和国", "YE", 139),
            new Country("越南", "VN", 141),
            new Country("中国", "CN", 142),
            new Country("东帝汶", "TL", 144),
            new Country("哈萨克斯坦", "KZ", 145),
            new Country("吉尔吉斯斯坦", "KG", 146),
            new Country("塔吉克斯坦", "TJ", 147),
            new Country("土库曼斯坦", "TM", 148),
            new Country("乌兹别克斯坦", "UZ", 149),
            new Country("阿尔及利亚", "DZ", 201),
            new Country("安哥拉", "AO", 202),
            new Country("贝宁", "BJ", 203),
            new Country("布隆迪", "BI", 205),
            new Country("喀麦隆", "CM", 206),
            new Country("佛得角", "CV", 208),
            new Country("中非共和国", "CF", 209),
            new Country("乍得", "TD", 211),
            new Country("科摩罗", "KM", 212),
            new Country("刚果", "CG", 213),
            new Country("吉布提", "DJ", 214),
            new Country("埃及", "EG", 215),
            new Country("赤道几内亚", "GQ", 216),
            new Country("埃塞俄比亚", "ET", 217),
            new Country("加蓬", "GA", 218),
            new Country("冈比亚", "GM", 219),
            new Country("加纳", "GH", 220),
            new Country("几内亚", "GN", 221),
            new Country("几内亚(比绍)", "GW", 222),
            new Country("科特迪瓦", "CI", 223),
            new Country("肯尼亚", "KE", 224),
            new Country("利比里亚", "LR", 225),
            new Country("利比亚", "LY", 226),
            new Country("马达加斯加", "MG", 227),
            new Country("马拉维", "MW", 228),
            new Country("马里", "ML", 229),
            new Country("毛里塔尼亚", "MR", 230),
            new Country("毛里求斯", "MU", 231),
            new Country("摩洛哥", "MA", 232),
            new Country("莫桑比克", "MZ", 233),
            new Country("纳米比亚", "NA", 234),
            new Country("尼日尔", "NE", 235),
            new Country("尼日利亚", "NG", 236),
            new Country("留尼汪", "RE", 237),
            new Country("卢旺达", "RW", 238),
            new Country("圣多美和普林西比", "ST", 239),
            new Country("塞内加尔", "SN", 240),
            new Country("塞舌尔", "SC", 241),
            new Country("塞拉利昂", "SL", 242),
            new Country("索马里", "SO", 243),
            new Country("南非", "ZA", 244),
            new Country("西撒哈拉", "EH", 245),
            new Country("苏丹", "SD", 246),
            new Country("坦桑尼亚", "TZ", 247),
            new Country("多哥", "TG", 248),
            new Country("突尼斯", "TN", 249),
            new Country("乌干达", "UG", 250),
            new Country("布基纳法索", "BF", 251),
            new Country("民主刚果", "CD", 252),
            new Country("赞比亚", "ZM", 253),
            new Country("津巴布韦", "ZW", 254),
            new Country("莱索托", "LS", 255),
            new Country("斯威士兰", "SZ", 257),
            new Country("厄立特里亚", "ER", 258),
            new Country("马约特岛", "YT", 259),
            new Country("比利时", "BE", 301),
            new Country("丹麦", "DK", 302),
            new Country("英国", "GB", 303),
            new Country("德国", "DE", 304),
            new Country("法国", "FR", 305),
            new Country("爱尔兰", "IE", 306),
            new Country("意大利", "IT", 307),
            new Country("卢森堡", "LU", 308),
            new Country("荷兰", "NL", 309),
            new Country("希腊", "GR", 310),
            new Country("葡萄牙", "PT", 311),
            new Country("西班牙", "ES", 312),
            new Country("阿尔巴尼亚", "AL", 313),
            new Country("安道尔", "AD", 314),
            new Country("奥地利", "AT", 315),
            new Country("保加利亚", "BG", 316),
            new Country("芬兰", "FI", 318),
            new Country("直布罗陀", "GI", 320),
            new Country("匈牙利", "HU", 321),
            new Country("冰岛", "IS", 322),
            new Country("列支敦士登", "LI", 323),
            new Country("马耳他", "MT", 324),
            new Country("摩纳哥", "MC", 325),
            new Country("挪威", "NO", 326),
            new Country("波兰", "PL", 327),
            new Country("罗马尼亚", "RO", 328),
            new Country("圣马力诺", "SM", 329),
            new Country("瑞典", "SE", 330),
            new Country("瑞士", "CH", 331),
            new Country("爱沙尼亚", "EE", 334),
            new Country("拉脱维亚", "LV", 335),
            new Country("立陶宛", "LT", 336),
            new Country("格鲁吉亚", "GE", 337),
            new Country("亚美尼亚", "AM", 338),
            new Country("阿塞拜疆", "AZ", 339),
            new Country("白俄罗斯", "BY", 340),
            new Country("摩尔多瓦", "MD", 343),
            new Country("俄罗斯联邦", "RU", 344),
            new Country("乌克兰", "UA", 347),
            new Country("斯洛文尼亚", "SI", 350),
            new Country("克罗地亚", "HR", 351),
            new Country("捷克共和国", "CZ", 352),
            new Country("斯洛伐克", "SK", 353),
            new Country("马其顿", "MK", 354),
            new Country("波斯尼亚-黑塞哥维那共和", "BA", 355),
            new Country("梵蒂冈城国", "VA", 356),
            new Country("法罗群岛", "FO", 357),
            new Country("塞尔维亚", "RS", 358),
            new Country("黑山", "ME", 359),
            new Country("安提瓜和巴布达", "AG", 401),
            new Country("阿根廷", "AR", 402),
            new Country("阿鲁巴岛", "AW", 403),
            new Country("巴哈马", "BS", 404),
            new Country("巴巴多斯", "BB", 405),
            new Country("伯利兹", "BZ", 406),
            new Country("玻利维亚", "BO", 408),
            new Country("巴西", "BR", 410),
            new Country("开曼群岛", "KY", 411),
            new Country("智利", "CL", 412),
            new Country("哥伦比亚", "CO", 413),
            new Country("哥斯达黎加", "CR", 415),
            new Country("古巴", "CU", 416),
            new Country("多米尼加共和国", "DO", 418),
            new Country("厄瓜多尔", "EC", 419),
            new Country("法属圭亚那", "GF", 420),
            new Country("格林纳达", "GD", 421),
            new Country("瓜德罗普", "GP", 422),
            new Country("危地马拉", "GT", 423),
            new Country("圭亚那", "GY", 424),
            new Country("海地", "HT", 425),
            new Country("洪都拉斯", "HN", 426),
            new Country("牙买加", "JM", 427),
            new Country("马提尼克", "MQ", 428),
            new Country("墨西哥", "MX", 429),
            new Country("尼加拉瓜", "NI", 431),
            new Country("巴拿马", "PA", 432),
            new Country("巴拉圭", "PY", 433),
            new Country("秘鲁", "PE", 434),
            new Country("波多黎各", "PR", 435),
            new Country("圣卢西亚", "LC", 437),
            new Country("圣马丁岛", "MF", 438),
            new Country("圣文森特和格林纳丁斯", "VC", 439),
            new Country("萨尔瓦多", "SV", 440),
            new Country("苏里南", "SR", 441),
            new Country("特立尼达和多巴哥", "TT", 442),
            new Country("特克斯和凯科斯群岛", "TC", 443),
            new Country("乌拉圭", "UY", 444),
            new Country("委内瑞拉", "VE", 445),
            new Country("英属维尔京群岛", "VG", 446),
            new Country("圣皮埃尔和密克隆", "PM", 448),
            new Country("加拿大", "CA", 501),
            new Country("美国", "US", 502),
            new Country("格陵兰", "GL", 503),
            new Country("百慕大", "BM", 504),
            new Country("澳大利亚", "AU", 601),
            new Country("库克群岛", "CK", 602),
            new Country("斐济", "FJ", 603),
            new Country("瑙鲁", "NR", 606),
            new Country("新喀里多尼亚", "NC", 607),
            new Country("瓦努阿图", "VU", 608),
            new Country("新西兰", "NZ", 609),
            new Country("诺福克岛", "NF", 610),
            new Country("巴布亚新几内亚", "PG", 611),
            new Country("所罗门群岛", "SB", 613),
            new Country("汤加", "TO", 614),
            new Country("土阿莫土群岛", "TA", 615),
            new Country("土布艾群岛", "TB", 616),
            new Country("萨摩亚", "WS", 617),
            new Country("基里巴斯", "KI", 618),
            new Country("图瓦卢", "TV", 619),
            new Country("密克罗尼西亚联邦", "FM", 620),
            new Country("马绍尔群岛", "MH", 621),
            new Country("帕劳共和国", "PW", 622),
            new Country("法属波利尼西亚", "PF", 623)


            //new Country("中国", "CN", 142),
            //new Country("德国", "DE", 304),
            //new Country("荷兰", "NL", 309),
            //new Country("澳大利亚", "AU", 601),
            //new Country("美国", "US", 502),
            //new Country("日本", "JP", 116),
            //new Country("英国", "GB", 303),
            //new Country("比利时", "BE", 301),
            //new Country("波兰", "PL", 327),
            //new Country("中国香港", "HK", 110),
            //new Country("法国", "FR", 305),
            //new Country("加拿大", "CA", 501),
            //new Country("韩国", "KR", 133),
            //new Country("新西兰", "NZ", 609)
            //,
            //new Country("Angola", "AO"),
            //new Country("Afghanistan", "AF"),
            //new Country("Albania", "AL"),
            //new Country("Algeria", "DZ"),
            //new Country("Andorra", "AD"),
            //new Country("Anguilla", "AI"),
            //new Country("Antigua and Barbuda", "AG"),
            //new Country("Argentina", "AR"),
            //new Country("Armenia", "AM"),
            //new Country("Austria", "AT"),
            //new Country("Azerbaijan", "AZ"),
            //new Country("Bahamas", "BS"),
            //new Country("Bahrain", "BH"),
            //new Country("Bangladesh	", "BD"),
            //new Country("Barbados", "BB"),
            //new Country("Belarus", "BY"),
            //new Country("Belize", "BZ"),
            //new Country("Benin", "BJ"),
            //new Country("Bermuda Is.", "BM"),
            //new Country("Bolivia", "BO"),
            //new Country("Botswana", "BW"),
            //new Country("Brazil", "BR"),
            //new Country("Brunei", "BN"),
            //new Country("Bulgaria", "BG"),
            //new Country("Burkina-faso", "BF"),
            //new Country("Burma", "MM"),
            //new Country("Burundi", "BI"),
            //new Country("Cameroon", "CM"),
            //new Country("Canada", "CA"),
            //new Country("Central African Republic", "CF"),
            //new Country("Chad", "TD"),
            //new Country("Chile", "CL"),
            //new Country("Colombia", "CO"),
            //new Country("Congo", "CG"),
            //new Country("Cook Is.", "CK"),
            //new Country("Costa Rica", "CR"),
            //new Country("Cuba", "CU"),
            //new Country("Cyprus", "CY"),
            //new Country("Czech Republic", "CZ"),
            //new Country("Denmark", "DK"),
            //new Country("Djibouti", "DJ"),
            //new Country("Dominica Rep.", "DO"),
            //new Country("Ecuador", "EC"),
            //new Country("Egypt", "EG"),
            //new Country("EI Salvador", "SV"),
            //new Country("Estonia", "EE"),
            //new Country("Ethiopia", "ET"),
            //new Country("Fiji", "FJ"),
            //new Country("Finland", "FI"),
            //new Country("France", "FR"),
            //new Country("French Guiana", "GF"),
            //new Country("Gabon", "GA"),
            //new Country("Gambia", "GM"),
            //new Country("Georgia", "GE"),
            //new Country("Ghana", "GH"),
            //new Country("Gibraltar", "GI"),
            //new Country("Greece", "GR"),
            //new Country("Grenada", "GD"),
            //new Country("Guam", "GU"),
            //new Country("Guatemala", "GT"),
            //new Country("Guinea", "GN"),
            //new Country("Guyana", "GY"),
            //new Country("Haiti", "HT"),
            //new Country("Honduras", "HN"),
            //new Country("Hungary", "HU"),
            //new Country("Iceland", "IS"),
            //new Country("India", "IN"),
            //new Country("Indonesia", "ID"),
            //new Country("Iran", "IR"),
            //new Country("Iraq", "IQ"),
            //new Country("Ireland", "IE"),
            //new Country("Israel", "IL"),
            //new Country("Italy", "IT"),
            //new Country("Jamaica", "JM"),
            //new Country("Jordan", "JO"),
            //new Country("Kampuchea (Cambodia )", "KH"),
            //new Country("Kazakstan", "KZ"),
            //new Country("Kenya", "KE"),
            //new Country("Kuwait", "KW"),
            //new Country("Kyrgyzstan", "KG"),
            //new Country("Laos", "LA"),
            //new Country("Latvia", "LV"),
            //new Country("Lebanon", "LB"),
            //new Country("Lesotho", "LS"),
            //new Country("Liberia", "LR"),
            //new Country("Libya", "LY"),
            //new Country("Liechtenstein", "LI"),
            //new Country("Lithuania", "LT"),
            //new Country("Luxembourg", "LU"),
            //new Country("Macao", "MO"),
            //new Country("Madagascar", "MG"),
            //new Country("Malawi", "MW"),
            //new Country("Malaysia", "MY"),
            //new Country("Maldives", "MV"),
            //new Country("Mali", "ML"),
            //new Country("Malta", "MT"),
            //new Country("Mauritius", "MU"),
            //new Country("Mexico", "MX"),
            //new Country("Moldova, Republic of", "MD"),
            //new Country("Monaco", "MC"),
            //new Country("Mongolia", "MN"),
            //new Country("Montserrat Is", "MS"),
            //new Country("Morocco", "MA"),
            //new Country("Mozambique", "MZ"),
            //new Country("Namibia", "NA"),
            //new Country("Nauru", "NR"),
            //new Country("Nepal", "NP"),
            //new Country("Nicaragua", "NI"),
            //new Country("Niger", "NE"),
            //new Country("Nigeria", "NG"),
            //new Country("North Korea", "KP"),
            //new Country("Norway", "NO"),
            //new Country("Oman", "OM"),
            //new Country("Pakistan", "PK"),
            //new Country("Panama", "PA"),
            //new Country("Papua New Cuinea", "PG"),
            //new Country("Paraguay", "PY"),
            //new Country("Peru", "PE"),
            //new Country("Philippines", "PH"),
            //new Country("French Polynesia", "PF"),
            //new Country("Portugal", "PT"),
            //new Country("Puerto Rico", "PR"),
            //new Country("Qatar", "QA"),
            //new Country("Romania", "RO"),
            //new Country("Russia", "RU"),
            //new Country("Saint Lueia", "LC"),
            //new Country("Saint Vincent", "VC"),
            //new Country("San Marino", "SM"),
            //new Country("Sao Tome and Principe", "ST"),
            //new Country("Saudi Arabia", "SA"),
            //new Country("Senegal", "SN"),
            //new Country("Seychelles", "SC"),
            //new Country("Sierra Leone", "SL"),
            //new Country("Singapore", "SG"),
            //new Country("Slovakia", "SK"),
            //new Country("Slovenia", "SI"),
            //new Country("Solomon Is", "SB"),
            //new Country("Somali", "SO"),
            //new Country("South Africa", "ZA"),
            //new Country("Spain", "ES"),
            //new Country("Sri Lanka", "LK"),
            //new Country("St.Lucia", "LC"),
            //new Country("St.Vincent", "VC"),
            //new Country("Sudan", "SD"),
            //new Country("Suriname", "SR"),
            //new Country("Swaziland", "SZ"),
            //new Country("Sweden", "SE"),
            //new Country("Switzerland	", "CH"),
            //new Country("Syria", "SY"),
            //new Country("Taiwan", "TW"),
            //new Country("Tajikstan", "TJ"),
            //new Country("Tanzania", "TZ"),
            //new Country("Thailand", "TH"),
            //new Country("Togo", "TG"),
            //new Country("Tonga", "TO"),
            //new Country("Trinidad and Tobago", "TT"),
            //new Country("Tunisia", "TN"),
            //new Country("Turkey", "TR"),
            //new Country("Turkmenistan", "TM"),
            //new Country("Uganda", "UG"),
            //new Country("Ukraine", "UA"),
            //new Country("United Arab Emirates", "AE"),
            //new Country("Uruguay", "UY"),
            //new Country("Uzbekistan", "UZ"),
            //new Country("Venezuela", "VE"),
            //new Country("Vietnam", "VN"),
            //new Country("Yemen", "YE"),
            //new Country("Yugoslavia", "YU"),
            //new Country("Zimbabwe", "ZW"),
            //new Country("Zaire", "ZR"),
            //new Country("Zambia", "ZM")
            #endregion
        };

        public static List<Country> All
        {
            get
            {
                return new List<Country>(s_CountryList);
            }
        }

        public static Country Get(string code)
        {
            return All.Find(x => string.Compare(x.Code, code, true) == 0);
        }

        public static bool IsValidCountryCode(string code)
        {
            return Get(code) != null;
        }

        //------- Instance Member ------------------------------------

        private Country(string englishName, string code, int customsNumber)
        {
            Code = code;
            Name = englishName;
            CustomsNumber = customsNumber;
        }

        /// <summary>
        /// Gets or sets the ISO 4217 country code
        /// </summary>
        public string Code { get; private set; }

        /// <summary>
        /// Gets or sets the country name in english
        /// </summary>
        public string Name { get; private set; }

        /// <summary>
        /// 海关的国别地区编码
        /// </summary>
        public int CustomsNumber { get; private set; }
    }
}
