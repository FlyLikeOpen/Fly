
** [2019-12-09 09:57:05.818] - Begin **************************************************************
[LogID]: aea42e7a-3a7f-4eb7-bd9c-498009b20f29
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 09:57:05.762
[ProcessID]: 14468
[ProcessName]: w3wp
[ThreadID]: 11
[StackTrace]: 
** [2019-12-09 09:57:05.818] - End ****************************************************************

** [2019-12-09 15:06:47.410] - Begin **************************************************************
[LogID]: 2fca133e-126d-451e-a86a-b9846745582c
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 15:06:47.371
[ProcessID]: 38088
[ProcessName]: w3wp
[ThreadID]: 7
[StackTrace]: 
** [2019-12-09 15:06:47.410] - End ****************************************************************

** [2019-12-09 15:39:43.360] - Begin **************************************************************
[LogID]: 42db1f6f-c6fb-4660-ac10-e165ec3bd32b
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 15:39:43.339
[ProcessID]: 38088
[ProcessName]: w3wp
[ThreadID]: 33
[StackTrace]: 
** [2019-12-09 15:39:43.360] - End ****************************************************************

** [2019-12-09 17:07:28.987] - Begin **************************************************************
[LogID]: 38b305bb-b2b7-4054-8b37-2a7a6bdde051
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 17:07:28.962
[ProcessID]: 21192
[ProcessName]: w3wp
[ThreadID]: 7
[StackTrace]: 
** [2019-12-09 17:07:28.987] - End ****************************************************************

** [2019-12-09 17:41:35.240] - Begin **************************************************************
[LogID]: d7edfe30-b5d4-4287-a0c5-619cbffaa439
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 17:41:35.201
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 7
[StackTrace]: 
** [2019-12-09 17:41:35.240] - End ****************************************************************

** [2019-12-09 18:12:26.819] - Begin **************************************************************
[LogID]: 7667a2e3-b33e-4666-a27a-6f64680998ff
[Source]: WMSLocal
[Category]: Error
[RequestUrl]: http://local.wmslocal.com/inventory/inventoryincome/
[RequestReferer]: http://local.wmslocal.com/inventory/inventoryincome/
[UserHostName]: 127.0.0.1
[UserHostAddress]: 127.0.0.1
[OperatorUser]: [Harry] harry
[Content]: System.Web.HttpCompileException (0x80004005): d:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Views\Inventory\InventoryIncome.cshtml(252): error CS1061: “IBB360.WMSLocal.Objects.Inventory.InventoryIncome”不包含“DifferenceQty”的定义，并且找不到可接受类型为“IBB360.WMSLocal.Objects.Inventory.InventoryIncome”的第一个参数的扩展方法“DifferenceQty”(是否缺少 using 指令或程序集引用?)
   在 System.Web.Compilation.AssemblyBuilder.Compile()
   在 System.Web.Compilation.BuildProvidersCompiler.PerformBuild()
   在 System.Web.Compilation.BuildManager.CompileWebFile(VirtualPath virtualPath)
   在 System.Web.Compilation.BuildManager.GetVPathBuildResultInternal(VirtualPath virtualPath, Boolean noBuild, Boolean allowCrossApp, Boolean allowBuildInPrecompile, Boolean throwIfNotFound, Boolean ensureIsUpToDate)
   在 System.Web.Compilation.BuildManager.GetVPathBuildResultWithNoAssert(HttpContext context, VirtualPath virtualPath, Boolean noBuild, Boolean allowCrossApp, Boolean allowBuildInPrecompile, Boolean throwIfNotFound, Boolean ensureIsUpToDate)
   在 System.Web.Compilation.BuildManager.GetVirtualPathObjectFactory(VirtualPath virtualPath, HttpContext context, Boolean allowCrossApp, Boolean throwIfNotFound)
   在 System.Web.Compilation.BuildManager.GetCompiledType(VirtualPath virtualPath)
   在 System.Web.Mvc.BuildManagerCompiledView.Render(ViewContext viewContext, TextWriter writer)
   在 System.Web.Mvc.ViewResultBase.ExecuteResult(ControllerContext context)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(ControllerContext controllerContext, IList`1 filters, ActionResult actionResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 18:12:26.794
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 19
[StackTrace]: 
** [2019-12-09 18:12:26.819] - End ****************************************************************

** [2019-12-09 19:00:13.510] - Begin **************************************************************
[LogID]: 86fadf84-96b9-41f3-bae4-1cffd6d6a6f9
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 19:00:13.489
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 5
[StackTrace]: 
** [2019-12-09 19:00:13.510] - End ****************************************************************

** [2019-12-09 19:14:23.770] - Begin **************************************************************
[LogID]: 42219835-236a-4814-b52f-ccf0618c2c86
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 19:14:23.733
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 5
[StackTrace]: 
** [2019-12-09 19:14:23.770] - End ****************************************************************

** [2019-12-09 19:16:40.386] - Begin **************************************************************
[LogID]: 801dc981-97f9-471f-9dda-0aa6ae43e77d
[Source]: WMSLocal
[Category]: Error
[RequestUrl]: http://local.wmslocal.com/inventory/ajaxincomeconfirm/
[RequestReferer]: http://local.wmslocal.com/inventory/inventoryincome/
[UserHostName]: 127.0.0.1
[UserHostAddress]: 127.0.0.1
[OperatorUser]: [Harry] harry
[Content]: IBB360.Framework.SqlDbAccess.DaoSqlException: 目标库位上的SKU种类超过了3个
<<Connection String>> : Data Source=localhost;Initial Catalog=WMSLocal.Queue;Integrated Security=False;Persist Security Info=False;User ID=sa;Password=123; Max Pool Size=4096; Min Pool Size=10
<<SQL Script>> : 
IF EXISTS
(
    SELECT 
        TOP 1 1 
    FROM 
        [WMSLocal.Inventory].[dbo].[LocationInventory]
    WHERE 
        [LocationId]=@LocationId 
        AND [ItemId] =@ItemId 
        AND [InventoryType]=@InventoryType 
        AND [ExpiryDate] = @ExpiryDate
)
BEGIN
    UPDATE TOP(1)
        [WMSLocal.Inventory].[dbo].[LocationInventory] 
    SET 
        [Qty]=[Qty]+@Qty
    WHERE 
        [LocationId]=@LocationId 
        AND [ItemId] =@ItemId 
        AND [ExpiryDate] = @ExpiryDate
END
ELSE
BEGIN
     IF NOT EXISTS
    (
        SELECT TOP(1) 1 FROM
		(
			SELECT 
				a.[LocationId],
				a.[ItemId] 
			FROM 
				[WMSLocal.Inventory].[dbo].[LocationInventory] a
			INNER JOIN
				[WMSLocal.Base].[dbo].[Location] b WITH(NOLOCK)
					ON a.[LocationId]=b.[Id]
			INNER JOIN
				[WMSLocal.Base].[dbo].[Zone] c WITH(NOLOCK)
					ON b.[ZoneId]=c.[Id]
			WHERE
				a.[LocationId]=@LocationId 
				AND c.[Type] IN (1,0)
			GROUP BY
				a.[LocationId],
				a.[ItemId]
		) x
		GROUP BY
			x.[LocationId]
		HAVING
			COUNT(1) >= 3
    )
    BEGIN
        INSERT INTO [WMSLocal.Inventory].[dbo].[LocationInventory]
        ([Id],[LocationId],[ItemId],[InventoryType],[Qty],[ExpiryDate]) 
        VALUES
        (@Id,@LocationId,@ItemId,@InventoryType,@Qty,@ExpiryDate)
    END
    ELSE
    BEGIN
        RAISERROR('目标库位上的SKU种类超过了3个', 16,  1)
        RETURN
    END
END
<<SQL Parameter(s)>> :
@LocationId [Guid] : c1598ba9-2e23-4f6d-baed-0679f4c0545f [System.Guid]
@ItemId [Guid] : 75d1fe83-bfe5-496c-ad4f-dd113b171f14 [System.Guid]
@InventoryType [Int32] : 0 [System.Int32]
@ExpiryDate [DateTime] : 2019/8/1 0:00:00 [System.DateTime]
@Qty [Int32] : 1 [System.Int32]
@Id [Guid] : 7c0ba887-175b-42a2-b980-34050133e423 [System.Guid]
 ---> System.Data.SqlClient.SqlException: 目标库位上的SKU种类超过了3个
   在 System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   在 System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   在 System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   在 System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   在 System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   在 System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(String connStrKey, CommandType cmdType, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteBySpecifiedConnStrKey.cs:行号 24
   --- 内部异常堆栈跟踪的结尾 ---
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(String connStrKey, CommandType cmdType, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteBySpecifiedConnStrKey.cs:行号 30
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(DbInstance instance, CommandType cmdType, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteByDefaultConnStrKey.cs:行号 13
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(DbInstance instance, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteByDefaultConnStrKey.cs:行号 18
   在 IBB360.WMSLocal.APIImpls.Inventory.LocationInventoryApi.IncreaseInventory(LocationInventory locationInventory) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\LocationInventoryApi.cs:行号 1607
   在 IBB360.WMSLocal.APIImpls.Inventory.LocationInventoryApi.IncreaseInventory(LocationInventory locationInventory, LocationInventoryLog log) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\LocationInventoryApi.cs:行号 64
   在 IBB360.WMSLocal.APIImpls.Inventory.InventoryIncomeApi.Confirm(Guid id, Nullable`1 expiryDate, String remark) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\InventoryIncomeApi.cs:行号 109
   在 IBB360.WMSLocal.UI.Controllers.InventoryController.AjaxIncomeConfirm(Guid id, Nullable`1 expiryDate, String remark) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Controllers\InventoryController.cs:行号 64
   在 lambda_method(Closure , ControllerBase , Object[] )
   在 System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 19:16:40.356
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 19
[StackTrace]: 
** [2019-12-09 19:16:40.386] - End ****************************************************************

** [2019-12-09 19:23:43.995] - Begin **************************************************************
[LogID]: bfe59b1b-c8cf-4611-8027-b9459fc3a4ee
[Source]: WMSLocal
[Category]: Error
[RequestUrl]: http://local.wmslocal.com/inventory/ajaxincomeconfirm/
[RequestReferer]: http://local.wmslocal.com/inventory/inventoryincome/
[UserHostName]: 127.0.0.1
[UserHostAddress]: 127.0.0.1
[OperatorUser]: [Harry] harry
[Content]: IBB360.Framework.SqlDbAccess.DaoSqlException: 目标库位上的SKU种类超过了3个
<<Connection String>> : Data Source=localhost;Initial Catalog=WMSLocal.Queue;Integrated Security=False;Persist Security Info=False;User ID=sa;Password=123; Max Pool Size=4096; Min Pool Size=10
<<SQL Script>> : 
IF EXISTS
(
    SELECT 
        TOP 1 1 
    FROM 
        [WMSLocal.Inventory].[dbo].[LocationInventory]
    WHERE 
        [LocationId]=@LocationId 
        AND [ItemId] =@ItemId 
        AND [InventoryType]=@InventoryType 
        AND [ExpiryDate] = @ExpiryDate
)
BEGIN
    UPDATE TOP(1)
        [WMSLocal.Inventory].[dbo].[LocationInventory] 
    SET 
        [Qty]=[Qty]+@Qty
    WHERE 
        [LocationId]=@LocationId 
        AND [ItemId] =@ItemId 
        AND [ExpiryDate] = @ExpiryDate
END
ELSE
BEGIN
     IF NOT EXISTS
    (
        SELECT TOP(1) 1 FROM
		(
			SELECT 
				a.[LocationId],
				a.[ItemId] 
			FROM 
				[WMSLocal.Inventory].[dbo].[LocationInventory] a
			INNER JOIN
				[WMSLocal.Base].[dbo].[Location] b WITH(NOLOCK)
					ON a.[LocationId]=b.[Id]
			INNER JOIN
				[WMSLocal.Base].[dbo].[Zone] c WITH(NOLOCK)
					ON b.[ZoneId]=c.[Id]
			WHERE
				a.[LocationId]=@LocationId 
				AND c.[Type] IN (1,0)
			GROUP BY
				a.[LocationId],
				a.[ItemId]
		) x
		GROUP BY
			x.[LocationId]
		HAVING
			COUNT(1) >= 3
    )
    BEGIN
        INSERT INTO [WMSLocal.Inventory].[dbo].[LocationInventory]
        ([Id],[LocationId],[ItemId],[InventoryType],[Qty],[ExpiryDate]) 
        VALUES
        (@Id,@LocationId,@ItemId,@InventoryType,@Qty,@ExpiryDate)
    END
    ELSE
    BEGIN
        RAISERROR('目标库位上的SKU种类超过了3个', 16,  1)
        RETURN
    END
END
<<SQL Parameter(s)>> :
@LocationId [Guid] : c1598ba9-2e23-4f6d-baed-0679f4c0545f [System.Guid]
@ItemId [Guid] : 75d1fe83-bfe5-496c-ad4f-dd113b171f14 [System.Guid]
@InventoryType [Int32] : 0 [System.Int32]
@ExpiryDate [DateTime] : 2019/11/1 0:00:00 [System.DateTime]
@Qty [Int32] : 1 [System.Int32]
@Id [Guid] : 0dffc094-66cd-42f4-b2d5-adfd5e40630d [System.Guid]
 ---> System.Data.SqlClient.SqlException: 目标库位上的SKU种类超过了3个
   在 System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   在 System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   在 System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   在 System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   在 System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   在 System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(String connStrKey, CommandType cmdType, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteBySpecifiedConnStrKey.cs:行号 24
   --- 内部异常堆栈跟踪的结尾 ---
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(String connStrKey, CommandType cmdType, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteBySpecifiedConnStrKey.cs:行号 30
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(DbInstance instance, CommandType cmdType, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteByDefaultConnStrKey.cs:行号 13
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(DbInstance instance, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteByDefaultConnStrKey.cs:行号 18
   在 IBB360.WMSLocal.APIImpls.Inventory.LocationInventoryApi.IncreaseInventory(LocationInventory locationInventory) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\LocationInventoryApi.cs:行号 1607
   在 IBB360.WMSLocal.APIImpls.Inventory.LocationInventoryApi.IncreaseInventory(LocationInventory locationInventory, LocationInventoryLog log) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\LocationInventoryApi.cs:行号 64
   在 IBB360.WMSLocal.APIImpls.Inventory.InventoryIncomeApi.Confirm(Guid id, Nullable`1 expiryDate, String remark) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\InventoryIncomeApi.cs:行号 109
   在 IBB360.WMSLocal.UI.Controllers.InventoryController.AjaxIncomeConfirm(Guid id, Nullable`1 expiryDate, String remark) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Controllers\InventoryController.cs:行号 64
   在 lambda_method(Closure , ControllerBase , Object[] )
   在 System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 19:23:43.990
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 16
[StackTrace]: 
** [2019-12-09 19:23:43.995] - End ****************************************************************

** [2019-12-09 19:31:25.493] - Begin **************************************************************
[LogID]: 235b3224-36c5-4feb-b74a-e637ca34accf
[Source]: WMSLocal
[Category]: Error
[RequestUrl]: http://local.wmslocal.com/inventory/ajaxincomeconfirm/
[RequestReferer]: http://local.wmslocal.com/inventory/inventoryincome/
[UserHostName]: 127.0.0.1
[UserHostAddress]: 127.0.0.1
[OperatorUser]: [Harry] harry
[Content]: System.Net.WebException: 无法连接到远程服务器 ---> System.Net.Sockets.SocketException: 由于目标计算机积极拒绝，无法连接。 127.0.0.1:6636
   在 System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)
   在 System.Net.ServicePoint.ConnectSocketInternal(Boolean connectFailure, Socket s4, Socket s6, Socket& socket, IPAddress& address, ConnectSocketState state, IAsyncResult asyncResult, Exception& exception)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Net.HttpWebRequest.GetResponse()
   在 System.Xml.XmlDownloadManager.GetNonFileStream(Uri uri, ICredentials credentials, IWebProxy proxy, RequestCachePolicy cachePolicy)
   在 System.Xml.XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn)
   在 System.Xml.XmlTextReaderImpl.OpenUrlDelegate(Object xmlResolver)
   在 System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)
   在 System.Threading.CompressedStack.Run(CompressedStack compressedStack, ContextCallback callback, Object state)
   在 System.Xml.XmlTextReaderImpl.OpenUrl()
   在 System.Xml.XmlTextReaderImpl.Read()
   在 System.Xml.XmlLoader.Load(XmlDocument doc, XmlReader reader, Boolean preserveWhitespace)
   在 System.Xml.XmlDocument.Load(XmlReader reader)
   在 System.Xml.XmlDocument.Load(String filename)
   在 IBB360.ServiceBus.Consumer.ConfigSetting.Load() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.ServiceBus\Core\IBB360.ServiceBus.Consumer\Config\ConfigSetting.cs:行号 153
   在 IBB360.ServiceBus.Consumer.ConfigSetting.GetQueueSetting() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.ServiceBus\Core\IBB360.ServiceBus.Consumer\Config\ConfigSetting.cs:行号 225
   在 IBB360.ServiceBus.Consumer.EventPublisher.get_Default() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.ServiceBus\Core\IBB360.ServiceBus.Consumer\Publisher\EventPublisher.cs:行号 38
   在 IBB360.WMSLocal.APIImpls.MsgSender.InventoryAdjustment(Guid merchantId, Guid orderId, InventoryAdjustmentType changeType, String remark, IList`1 items, String parcelNo) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\MsgSender.cs:行号 135
   在 IBB360.WMSLocal.APIImpls.Inventory.InventoryIncomeApi.Confirm(Guid id, Nullable`1 expiryDate, String remark) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\InventoryIncomeApi.cs:行号 166
   在 IBB360.WMSLocal.UI.Controllers.InventoryController.AjaxIncomeConfirm(Guid id, Nullable`1 expiryDate, String remark) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Controllers\InventoryController.cs:行号 64
   在 lambda_method(Closure , ControllerBase , Object[] )
   在 System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 19:31:25.488
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 5
[StackTrace]: 
** [2019-12-09 19:31:25.493] - End ****************************************************************

** [2019-12-09 19:32:29.285] - Begin **************************************************************
[LogID]: e99236b3-1d27-4d87-80e4-2ad895a25bfb
[Source]: WMSLocal
[Category]: Error
[RequestUrl]: http://local.wmslocal.com/inventory/ajaxincomeconfirm/
[RequestReferer]: http://local.wmslocal.com/inventory/inventoryincome/
[UserHostName]: 127.0.0.1
[UserHostAddress]: 127.0.0.1
[OperatorUser]: [Harry] harry
[Content]: System.Net.WebException: 无法连接到远程服务器 ---> System.Net.Sockets.SocketException: 由于目标计算机积极拒绝，无法连接。 127.0.0.1:6636
   在 System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)
   在 System.Net.ServicePoint.ConnectSocketInternal(Boolean connectFailure, Socket s4, Socket s6, Socket& socket, IPAddress& address, ConnectSocketState state, IAsyncResult asyncResult, Exception& exception)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Net.HttpWebRequest.GetResponse()
   在 System.Xml.XmlDownloadManager.GetNonFileStream(Uri uri, ICredentials credentials, IWebProxy proxy, RequestCachePolicy cachePolicy)
   在 System.Xml.XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn)
   在 System.Xml.XmlTextReaderImpl.OpenUrlDelegate(Object xmlResolver)
   在 System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)
   在 System.Threading.CompressedStack.Run(CompressedStack compressedStack, ContextCallback callback, Object state)
   在 System.Xml.XmlTextReaderImpl.OpenUrl()
   在 System.Xml.XmlTextReaderImpl.Read()
   在 System.Xml.XmlLoader.Load(XmlDocument doc, XmlReader reader, Boolean preserveWhitespace)
   在 System.Xml.XmlDocument.Load(XmlReader reader)
   在 System.Xml.XmlDocument.Load(String filename)
   在 IBB360.ServiceBus.Consumer.ConfigSetting.Load() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.ServiceBus\Core\IBB360.ServiceBus.Consumer\Config\ConfigSetting.cs:行号 153
   在 IBB360.ServiceBus.Consumer.ConfigSetting.GetQueueSetting() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.ServiceBus\Core\IBB360.ServiceBus.Consumer\Config\ConfigSetting.cs:行号 225
   在 IBB360.ServiceBus.Consumer.EventPublisher.get_Default() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.ServiceBus\Core\IBB360.ServiceBus.Consumer\Publisher\EventPublisher.cs:行号 38
   在 IBB360.WMSLocal.APIImpls.MsgSender.InventoryAdjustment(Guid merchantId, Guid orderId, InventoryAdjustmentType changeType, String remark, IList`1 items, String parcelNo) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\MsgSender.cs:行号 135
   在 IBB360.WMSLocal.APIImpls.Inventory.InventoryIncomeApi.Confirm(Guid id, Nullable`1 expiryDate, String remark) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\InventoryIncomeApi.cs:行号 166
   在 IBB360.WMSLocal.UI.Controllers.InventoryController.AjaxIncomeConfirm(Guid id, Nullable`1 expiryDate, String remark) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Controllers\InventoryController.cs:行号 64
   在 lambda_method(Closure , ControllerBase , Object[] )
   在 System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 19:32:29.279
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 16
[StackTrace]: 
** [2019-12-09 19:32:29.285] - End ****************************************************************

** [2019-12-09 19:36:43.507] - Begin **************************************************************
[LogID]: 28ac43c4-3e7b-4e8b-a03a-53515e6c4e20
[Source]: WMSLocal
[Category]: Error
[RequestUrl]: http://local.wmslocal.com/inventory/ajaxincomeconfirm/
[RequestReferer]: http://local.wmslocal.com/inventory/inventoryincome/
[UserHostName]: 127.0.0.1
[UserHostAddress]: 127.0.0.1
[OperatorUser]: [Harry] harry
[Content]: IBB360.Framework.SqlDbAccess.DaoSqlException: 目标库位上的SKU种类超过了3个
<<Connection String>> : Data Source=localhost;Initial Catalog=WMSLocal.Queue;Integrated Security=False;Persist Security Info=False;User ID=sa;Password=123; Max Pool Size=4096; Min Pool Size=10
<<SQL Script>> : 
IF EXISTS
(
    SELECT 
        TOP 1 1 
    FROM 
        [WMSLocal.Inventory].[dbo].[LocationInventory]
    WHERE 
        [LocationId]=@LocationId 
        AND [ItemId] =@ItemId 
        AND [InventoryType]=@InventoryType 
        AND [ExpiryDate] = @ExpiryDate
)
BEGIN
    UPDATE TOP(1)
        [WMSLocal.Inventory].[dbo].[LocationInventory] 
    SET 
        [Qty]=[Qty]+@Qty
    WHERE 
        [LocationId]=@LocationId 
        AND [ItemId] =@ItemId 
        AND [ExpiryDate] = @ExpiryDate
END
ELSE
BEGIN
     IF NOT EXISTS
    (
        SELECT TOP(1) 1 FROM
		(
			SELECT 
				a.[LocationId],
				a.[ItemId] 
			FROM 
				[WMSLocal.Inventory].[dbo].[LocationInventory] a
			INNER JOIN
				[WMSLocal.Base].[dbo].[Location] b WITH(NOLOCK)
					ON a.[LocationId]=b.[Id]
			INNER JOIN
				[WMSLocal.Base].[dbo].[Zone] c WITH(NOLOCK)
					ON b.[ZoneId]=c.[Id]
			WHERE
				a.[LocationId]=@LocationId 
				AND c.[Type] IN (1,0)
			GROUP BY
				a.[LocationId],
				a.[ItemId]
		) x
		GROUP BY
			x.[LocationId]
		HAVING
			COUNT(1) >= 3
    )
    BEGIN
        INSERT INTO [WMSLocal.Inventory].[dbo].[LocationInventory]
        ([Id],[LocationId],[ItemId],[InventoryType],[Qty],[ExpiryDate]) 
        VALUES
        (@Id,@LocationId,@ItemId,@InventoryType,@Qty,@ExpiryDate)
    END
    ELSE
    BEGIN
        RAISERROR('目标库位上的SKU种类超过了3个', 16,  1)
        RETURN
    END
END
<<SQL Parameter(s)>> :
@LocationId [Guid] : c1598ba9-2e23-4f6d-baed-0679f4c0545f [System.Guid]
@ItemId [Guid] : 75d1fe83-bfe5-496c-ad4f-dd113b171f14 [System.Guid]
@InventoryType [Int32] : 0 [System.Int32]
@ExpiryDate [DateTime] : 2019/8/1 0:00:00 [System.DateTime]
@Qty [Int32] : 1 [System.Int32]
@Id [Guid] : de22df99-ea70-4250-b0bb-5911ea6a7b90 [System.Guid]
 ---> System.Data.SqlClient.SqlException: 目标库位上的SKU种类超过了3个
   在 System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   在 System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   在 System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   在 System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   在 System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   在 System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(String connStrKey, CommandType cmdType, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteBySpecifiedConnStrKey.cs:行号 24
   --- 内部异常堆栈跟踪的结尾 ---
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(String connStrKey, CommandType cmdType, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteBySpecifiedConnStrKey.cs:行号 30
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(DbInstance instance, CommandType cmdType, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteByDefaultConnStrKey.cs:行号 13
   在 IBB360.Framework.SqlDbAccess.SqlHelper.ExecuteNonQuery(DbInstance instance, String cmdText, Object parameter) 位置 D:\公司源码\trunk\ibb360\src\new\IBB360.Framework\IBB360.Framework.SqlDbAccess\SqlHelper_ExecuteByDefaultConnStrKey.cs:行号 18
   在 IBB360.WMSLocal.APIImpls.Inventory.LocationInventoryApi.IncreaseInventory(LocationInventory locationInventory) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\LocationInventoryApi.cs:行号 1607
   在 IBB360.WMSLocal.APIImpls.Inventory.LocationInventoryApi.IncreaseInventory(LocationInventory locationInventory, LocationInventoryLog log) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\LocationInventoryApi.cs:行号 64
   在 IBB360.WMSLocal.APIImpls.Inventory.InventoryIncomeApi.Confirm(Guid id, Nullable`1 expiryDate, String remark) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Inventory\InventoryIncomeApi.cs:行号 109
   在 IBB360.WMSLocal.UI.Controllers.InventoryController.AjaxIncomeConfirm(Guid id, Nullable`1 expiryDate, String remark) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Controllers\InventoryController.cs:行号 64
   在 lambda_method(Closure , ControllerBase , Object[] )
   在 System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   在 System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 19:36:43.502
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 19
[StackTrace]: 
** [2019-12-09 19:36:43.507] - End ****************************************************************

** [2019-12-09 19:43:37.754] - Begin **************************************************************
[LogID]: 6d11bc70-7271-4418-adf7-a66aef859726
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 19:43:37.737
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 26
[StackTrace]: 
** [2019-12-09 19:43:37.754] - End ****************************************************************

** [2019-12-09 19:46:39.176] - Begin **************************************************************
[LogID]: d9ebaad9-3b06-43e6-8e8f-5af5fde696b9
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 19:46:39.087
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 10
[StackTrace]: 
** [2019-12-09 19:46:39.176] - End ****************************************************************

** [2019-12-09 19:57:51.270] - Begin **************************************************************
[LogID]: 88cea613-8088-4625-b121-aeaef6628390
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0()
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 19:57:51.232
[ProcessID]: 12588
[ProcessName]: w3wp
[ThreadID]: 19
[StackTrace]: 
** [2019-12-09 19:57:51.270] - End ****************************************************************

** [2019-12-09 20:02:48.892] - Begin **************************************************************
[LogID]: 8874d387-9acd-4024-b106-edb48af5d084
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 20:02:48.784
[ProcessID]: 44152
[ProcessName]: w3wp
[ThreadID]: 6
[StackTrace]: 
** [2019-12-09 20:02:48.892] - End ****************************************************************

** [2019-12-09 20:22:37.616] - Begin **************************************************************
[LogID]: c646ff4f-2978-4a08-9d95-652cf3416fd2
[Source]: WMSLocal
[Category]: Error
[OperatorUser]: 00000000-0000-0000-0000-000000000000
[Content]: System.Net.Sockets.SocketException (0x80004005): 一个封锁操作被对 WSACancelBlockingCall 的调用中断。
   在 System.Net.Sockets.Socket.Accept()
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServer.StartServer() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 182
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 63
   在 IBB360.WMSLocal.APIImpls.Common.WebSocketServerManager.Start(Int32 serverPort) 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.APIImpls\Common\WebSocketServerManager.cs:行号 44
   在 IBB360.WMSLocal.UI.Global.<>c__DisplayClass8_0.<StartSocketServer>b__0() 位置 D:\公司源码\trunk\ibb360\source_code\IBB360.WMSLocal\IBB360.WMSLocal.UI\Global.asax.cs:行号 128
[ServerIP]: 192.168.137.1
[ServerName]: DESKTOP-03QPLOV
[ServerTime]: 2019-12-09 20:22:37.577
[ProcessID]: 46436
[ProcessName]: w3wp
[ThreadID]: 7
[StackTrace]: 
** [2019-12-09 20:22:37.616] - End ****************************************************************
